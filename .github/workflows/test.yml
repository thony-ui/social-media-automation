name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-build:
    runs-on: ubuntu-latest

    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      ALLOWED_ORIGIN_PRODUCTION: ${{ secrets.ALLOWED_ORIGIN_PRODUCTION }}
      ALLOWED_ORIGIN_DEVELOPMENT: ${{ secrets.ALLOWED_ORIGIN_DEVELOPMENT }}
      LOG_LEVEL: ${{ secrets.LOG_LEVEL }}
      OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
      OPENROUTER_URL: ${{ secrets.OPENROUTER_URL }}
      REDIS_USERNAME: ${{ secrets.REDIS_USERNAME }}
      REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
      REDIS_HOST: ${{ secrets.REDIS_HOST }}
      REDIS_PORT: ${{ secrets.REDIS_PORT }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test

      - name: Set NODE_ENV to production
        run: echo "NODE_ENV=production" >> $GITHUB_ENV

      - name: Build and run docker-compose.production.yml
        run: docker compose -f backend/docker-compose.production.yml up --build -d

      - name: Wait for containers to be healthy
        run: sleep 10

      - name: Shut down docker compose
        run: docker compose -f backend/docker-compose.production.yml down
